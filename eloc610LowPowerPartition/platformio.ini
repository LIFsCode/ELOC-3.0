; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
;
;
; !!!!!!!!!!!!!!!!!!!!!!!!!!   NOTE  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
; This scheme uses sdkconfig.defaults to set defaults for all builds.
; Generated sdkconfig for tasks should not be committed to git.
;
; When adding/ changing options, make sure to add them to sdkconfig.defaults
; if possible, so that they are set for all builds. If not possible, add them
; to the build_flags of the specific build.

[platformio]
; Set default build
default_envs = esp32dev

[env]
; Defaults, can be overridden
platform = espressif32@~6.1.0
board = esp32dev
        ;esp-wrover-kit
board_upload.flash_size=16MB
framework =
    espidf
    arduino

upload_speed = 460800
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, log2file
board_build.partitions = elocPartitions.csv
extra_scripts =
    pre:tools/genVersion.py
    pre:tools/genNVS.py
lib_deps =
    ; Common libraries for all builds
    bblanchon/ArduinoJson@^6.21.2
    pvizeli/CmdParser@0.0.0-alpha+sha.dcaa7eada9
    evert-arias/EasyBuzzer @ 1.0.4
build_flags =
;https://docs.platformio.org/en/latest/platforms/espressif32.html#build-flags
; More than this required to enable SPI RAM
;https://github.com/LIFsCode/ELOC-3.0/issues/16#issuecomment-1707275057
    -DBOARD_HAS_PSRAM
    -DCONFIG_SPIRAM_CACHE_WORKAROUND
    -Wl,-Map,firmware.map
; Static code checking
check_tool = cppcheck
check_flags = --enable=all
debug_tool = esp-prog
debug_init_break = tbreak setup

[env:esp32dev]
; Build without Edge Impulse
lib_deps =
    ${env.lib_deps}
build_flags =
    ${env.build_flags}

[env:esp32dev-ei]
; Build with Edge Impulse
lib_deps =
    ${env.lib_deps}
    ; Workaround to move edge-impulse files into lib folder
    ./lib/edge-impulse
build_flags =
    ${env.build_flags}
    -DEDGE_IMPULSE_ENABLED
    # Force static allocation of classifier
    # https://docs.edgeimpulse.com/docs/run-inference/cpp-library/deploy-your-model-as-a-c-library#static-allocation
    -DEI_CLASSIFIER_ALLOCATION_STATIC=1

[env:esp32dev-windows]
extends=env:esp32dev
upload_port = COM3
monitor_port = COM3

[env:esp32dev-linux]
extends=env:esp32dev
upload_port = /dev/ttyUSB0
monitor_port = /dev/ttyUSB0

[env:esp32dev-ei-windows]
extends=env:esp32dev-ei
upload_port = COM3
monitor_port = COM3

[env:esp32dev-ei-linux]
extends=env:esp32dev-ei
upload_port = /dev/ttyUSB0
monitor_port = /dev/ttyUSB0
